version: '3.8'

services:
  nginx:
    container_name: nginx
    build:
      context: ./services/nginx
      args:
        - DOMAINS_ARG=${DOMAINS}
        # Wordpress connection info
        - WORDPRESS_HOST_ARG=${WORDPRESS_HOST}
        - WORDPRESS_PORT_ARG=${WORDPRESS_PORT}
    restart: unless-stopped
    volumes:
      - wordpress:/var/www/
    networks:
      - docker-network
    ports:
      - 443:443

  wordpress:
    container_name: ${WORDPRESS_HOST}
    build:
      context: ./services/wordpress
      args:
        - DOMAINS_ARG=${DOMAINS}
        # Wordpress config info
        - WORDPRESS_HOST_ARG=${WORDPRESS_HOST}
        - WORDPRESS_PORT_ARG=${WORDPRESS_PORT}
        # Database connection info
        - MYSQL_HOST_ARG=${MYSQL_HOST}
        - MYSQL_PORT_ARG=${MYSQL_PORT}
    restart: unless-stopped
    volumes:
      - wordpress:/var/www/
      - credentials:/credentials
    networks:
      - docker-network
    depends_on:
      - mariadb

  mariadb:
    container_name: ${MYSQL_HOST}
    build:
      context: ./services/mariadb
      args:
        - DOMAINS_ARG=${DOMAINS}
        # Database config info
        - MYSQL_ROOT_PW_ARG=${MYSQL_ROOT_PW}
    restart: unless-stopped
    volumes:
      - mariadb:/var/lib/mysql
      - credentials:/credentials
    networks:
      - docker-network

volumes:
  credentials:
    driver: local
    driver_opts:
      type: none
      device: ${VOLUMES_PATH}/.credentials
      o: bind

  wordpress:
    driver: local
    driver_opts:
      type: none
      device: ${VOLUMES_PATH}/wordpress
      o: bind

  mariadb:
    driver: local
    driver_opts:
      type: none
      device: ${VOLUMES_PATH}/mariadb
      o: bind

networks:
  docker-network:
    driver: bridge
